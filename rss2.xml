<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Yunsaijc&#39;s Blog</title>
    <link>http://yunsaijc.top/</link>
    
    <atom:link href="http://yunsaijc.top/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Enjoy</description>
    <pubDate>Sun, 08 Oct 2023 02:36:30 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>AI方向直博学习日志</title>
      <link>http://yunsaijc.top/2023/10/07/10-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://yunsaijc.top/2023/10/07/10-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Sat, 07 Oct 2023 12:34:16 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;年&quot;&gt;2023年&lt;/h2&gt;
&lt;h3 id=&quot;月&quot;&gt;10月&lt;/h3&gt;
&lt;h4 id=&quot;日&quot;&gt;7日&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;初步确定短期研究方向&lt;/li&gt;
&lt;li&gt;监督学习：关键在于，数据中有无人工标注的标签（&lt;a
href=&quot;https://zhuanlan.z</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="年">2023年</h2><h3 id="月">10月</h3><h4 id="日">7日</h4><ul><li>初步确定短期研究方向</li><li>监督学习：关键在于，数据中有无人工标注的标签（<ahref="https://zhuanlan.zhihu.com/p/376931561">https://zhuanlan.zhihu.com/p/376931561</a>）</li><li>泛化(Generalization)：是指模型很好地拟合以前未见过的新数据（从用于创建该模型的同一分布中抽取）的能力（<ahref="https://www.cnblogs.com/anliven/p/10264475.html">https://www.cnblogs.com/anliven/p/10264475.html</a>）</li><li>注意力机制：通过权重，将模型的注意力转移到重要的部位（<ahref="https://zhuanlan.zhihu.com/p/379722366">https://zhuanlan.zhihu.com/p/379722366</a>）</li><li>欧氏空间的通俗理解：<ahref="https://www.zhihu.com/question/27903807">https://www.zhihu.com/question/27903807</a></li><li>GNN基本原理：<ahref="https://blog.csdn.net/weixin_45884316/article/details/115751272">https://blog.csdn.net/weixin_45884316/article/details/115751272</a></li></ul>]]></content:encoded>
      
      
      <category domain="http://yunsaijc.top/categories/AI%E5%9F%BA%E7%A1%80/">AI基础</category>
      
      
      <category domain="http://yunsaijc.top/tags/%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/">学习日志</category>
      
      
      <comments>http://yunsaijc.top/2023/10/07/10-%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>将博客搬至CSDN</title>
      <link>http://yunsaijc.top/2023/10/07/11-%E5%B0%86%E5%8D%9A%E5%AE%A2%E6%90%AC%E8%87%B3CSDN/</link>
      <guid>http://yunsaijc.top/2023/10/07/11-%E5%B0%86%E5%8D%9A%E5%AE%A2%E6%90%AC%E8%87%B3CSDN/</guid>
      <pubDate>Sat, 07 Oct 2023 12:34:16 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;年&quot;&gt;2023年&lt;/h2&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="年">2023年</h2>]]></content:encoded>
      
      
      
      
      <comments>http://yunsaijc.top/2023/10/07/11-%E5%B0%86%E5%8D%9A%E5%AE%A2%E6%90%AC%E8%87%B3CSDN/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>AI中的线性代数（有空更新）</title>
      <link>http://yunsaijc.top/2023/10/05/9-AI%E4%B8%AD%E7%9A%84%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/</link>
      <guid>http://yunsaijc.top/2023/10/05/9-AI%E4%B8%AD%E7%9A%84%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/</guid>
      <pubDate>Thu, 05 Oct 2023 09:08:00 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;基本符号&quot;&gt;基本符号&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&quot;math inline&quot;&gt;\(A \in \mathbb{R}^{m\times
n}\)&lt;/span&gt;表示一个&lt;span class=&quot;math inline&quot;&gt;\(m\)&lt;/span&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="基本符号">基本符号</h2><ul><li><span class="math inline">\(A \in \mathbb{R}^{m\timesn}\)</span>表示一个<span class="math inline">\(m\)</span>行<spanclass="math inline">\(n\)</span>列的实数矩阵<spanclass="math inline">\((matrix)\)</span></li><li><span class="math inline">\(x\in\mathbb{R}^n\)</span>表示一个有<spanclass="math inline">\(n\)</span>个元素的向量<spanclass="math inline">\((vector)\)</span>。通常来说，一个<spanclass="math inline">\(n\)</span>维向量指的是一个<spanclass="math inline">\(n\times 1\)</span>的矩阵（即列向量<spanclass="math inline">\((column\ vector)\)</span>）。通过转置<spanclass="math inline">\((transpose)\)</span>可以表示对应的<spanclass="math inline">\(1\times n\)</span>矩阵（即行向量<spanclass="math inline">\((row\ vector)\)</span>）</li><li><span class="math inline">\(x_i\)</span>表示向量<spanclass="math inline">\(x\)</span>的第<spanclass="math inline">\(i\)</span>个元素</li><li><span class="math inline">\(a_{ij}\ or\ A_{ij}\)</span>表示矩阵<spanclass="math inline">\(A\)</span>中<spanclass="math inline">\(i\)</span>行<spanclass="math inline">\(j\)</span>列的元素</li><li><span class="math inline">\(a_j\ or\ A_{:,j}\)</span>表示矩阵<spanclass="math inline">\(A\)</span>的第<spanclass="math inline">\(j\)</span>列</li><li><span class="math inline">\(a_i^T\ or\ A_{i,:}\)</span>表示矩阵<spanclass="math inline">\(A\)</span>的第<spanclass="math inline">\(i\)</span>行</li></ul><h2 id="矩阵乘法matrix-multiplication">矩阵乘法(MatrixMultiplication)</h2><ul><li>矩阵<span class="math inline">\(A \in \mathbb{R}^{m\timesn}\)</span>和矩阵<span class="math inline">\(B \in \mathbb{R}^{n\timesp}\)</span>的乘积<span class="math inline">\((product)\)</span>是<spanclass="math inline">\(C=AB\in \mathbb{R}^{m\times p}\)</span>，其中<spanclass="math inline">\(C_{ij}=\sum^n_{k=1}A_{ik}B_{kj}\)</span></li><li>性质<ul><li>结合律<span class="math inline">\((associative)\)</span>：</li></ul></li></ul><h2 id="参考">参考</h2><blockquote><p><ahref="https://www.yanxishe.com/TextTranslation/2965">https://www.yanxishe.com/TextTranslation/2965</a></p><p><ahref="https://cs229.stanford.edu/section/cs229-linalg.pdf">https://cs229.stanford.edu/section/cs229-linalg.pdf</a></p></blockquote>]]></content:encoded>
      
      
      <category domain="http://yunsaijc.top/categories/AI%E5%9F%BA%E7%A1%80/">AI基础</category>
      
      
      <category domain="http://yunsaijc.top/tags/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/">线性代数</category>
      
      <category domain="http://yunsaijc.top/tags/AI/">AI</category>
      
      
      <comments>http://yunsaijc.top/2023/10/05/9-AI%E4%B8%AD%E7%9A%84%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>信息安全数学基础总结（有空更新）</title>
      <link>http://yunsaijc.top/2023/10/03/8-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93/</link>
      <guid>http://yunsaijc.top/2023/10/03/8-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93/</guid>
      <pubDate>Tue, 03 Oct 2023 05:48:59 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;大二第一学期，学院开设了《信息安全数学基础》这门课。但由于当时对信息安全的理解还不够深入，再加上已经过去了两年之久，很多知识都理解得不好，且印象模糊。借着大四这个相对空闲的时间，对学过的知识进行复习和总结。&lt;/p&gt;
&lt;h2 id=&quot;初等数论&quot;&gt;初等数论&lt;/h2&gt;
&lt;h3 i</description>
        
      
      
      
      <content:encoded><![CDATA[<p>大二第一学期，学院开设了《信息安全数学基础》这门课。但由于当时对信息安全的理解还不够深入，再加上已经过去了两年之久，很多知识都理解得不好，且印象模糊。借着大四这个相对空闲的时间，对学过的知识进行复习和总结。</p><h2 id="初等数论">初等数论</h2><h3 id="整数的因子分解">整数的因子分解</h3><h4 id="整除">整除</h4><ul><li><span class="math inline">\(a,\ b\in \mathbb{Z},\ b\neq 0,\quad 若\\exists\ q,\ 使得\  a=qb,\ 则\ b\mid a\ (b整除a),\ 否则\ b\nmida\)</span></li><li><span class="math inline">\(b\)</span>称为<spanclass="math inline">\(a\)</span>的因子，<spanclass="math inline">\(a\)</span>称为<spanclass="math inline">\(b\)</span>的倍数</li><li>性质<ul><li>传递性：<span class="math inline">\(c\mid b,\ b\mid a,\ then\ c\mida\)</span></li><li><span class="math inline">\(b\mid a,\ then\ bc\mid ac\)</span></li><li><span class="math inline">\(c\mid a,\ c\mid b,\ then\ c\midma+nb\)</span></li></ul></li></ul><h4 id="euclid欧几里得除法">Euclid(欧几里得)除法</h4><ul><li><span class="math inline">\(a,\ b\in \mathbb{Z},\ b&gt;0,\则存在唯一的整数对q,r\ 使得\ a=qb+r,\ 0\leq r&lt;b\)</span></li><li><span class="math inline">\(q\)</span>称为不完全商，<spanclass="math inline">\(r\)</span>称为余数（最小非负余数）</li><li>若调整<span class="math inline">\(q\)</span>（一般是加1）使得<spanclass="math inline">\(|r|\leq \frac{b}{2}\)</span>，则<spanclass="math inline">\(r\)</span>为绝对值最小余数（在Euclid算法中起到加速的作用）</li><li>可用于求整数的<span class="math inline">\(a\)</span>进制表示<img src="/2023/10/03/8-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93/1.png" class=""></li></ul><h4 id="公因子与最大公因子">公因子与最大公因子</h4><ul><li>设<span class="math inline">\(a,a_2,…,a_n\)</span>是<spanclass="math inline">\(n(n\geq2)\)</span>个整数，若整数<spanclass="math inline">\(d\)</span>是它们中每一个数的因数，则<spanclass="math inline">\(d\)</span>称<spanclass="math inline">\(a,a_2,…,a_n\)</span>的一个公因子</li><li>若<span class="math inline">\(a,a_2,…,a_n\)</span>不全为零，则<spanclass="math inline">\(a,a_2,…,a_n\)</span>的所有公因子中最大的一个称为最大公因子，记为<spanclass="math inline">\((a,a_2,…,a_n)\)</span></li><li>特别地，当<spanclass="math inline">\((a,a_2,…,a_n)=1\)</span>，称<spanclass="math inline">\(a,a_2,…,a_n\)</span>互素/互质</li><li>定义<spanclass="math inline">\((0,a)=a\)</span>，因为任何非零整数都是<spanclass="math inline">\(0\)</span>的因数</li></ul><p>辗转相除法/Euclid算法 求最大公因子</p><ul><li><p>预备定理：<span class="math inline">\(a,b,r是不全为0的整数,\若a=qb+r,\ q\in\mathbb{Z},\ 则(a,b)=(b,r)\)</span><img src="/2023/10/03/8-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93/2.png" class=""></p></li><li><p>将上述辗转相除的过程反过来写（即把余数放左边，用<spanclass="math inline">\(a,b\)</span>来表示余数），可以得到最大公因子的线性表示，即贝祖等式</p></li><li><p>贝祖等式：对任意两个正整数<spanclass="math inline">\(a,b\)</span>，存在整数<spanclass="math inline">\(x,y使得(a,b)=xa+yb\)</span></p></li><li><p>当<spanclass="math inline">\((a,b)=1\)</span>，可以求出唯一解<spanclass="math inline">\(x\)</span>，即<span class="math inline">\(xa\equiv1(mod\ b),\ x\equiv a^{-1}(mod\ b)\)</span></p></li><li><p>扩展/广义Euclid算法：求出最大公因子的同时求出系数<spanclass="math inline">\(x,y\)</span>（主要用于求乘法逆元）</p></li><li><p>伪代码 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Input: 非负整数a, b且a&gt;=b (先将待计算的整数取绝对值)</span><br><span class="line">Output: r=(a,b) 以及满足 sa+tb=(a,b)的s,t</span><br><span class="line">Extended Euclid(a,b)&#123;</span><br><span class="line">(r,s,t) &lt;- (a,1,0);</span><br><span class="line">(r&#x27;,s&#x27;,t&#x27;) &lt;- (b,0,1);</span><br><span class="line">While r&#x27;!=0 do&#123;</span><br><span class="line">q &lt;- floor(r/r&#x27;);</span><br><span class="line">(tmp1,tmp2,tmp3) &lt;- (r-qr&#x27;,s-qs&#x27;,t-qt&#x27;);</span><br><span class="line">(r,s,t) &lt;- (r&#x27;,s&#x27;,t&#x27;);</span><br><span class="line">(r&#x27;,s&#x27;,t&#x27;) &lt;- (tmp1,tmp2,tmp3);</span><br><span class="line">&#125;</span><br><span class="line">Return r,s,t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li><li><p>最大公因子等价定义：<spanclass="math inline">\(a,b\)</span>是不全为零的整数，则<spanclass="math inline">\(d=(a,b)\)</span>是集合<spanclass="math inline">\(\{xa+yb|x,y\in\mathbb{Z}\}\)</span>中的最小正整数</p></li><li><p>应用-方程有解的判定：<spanclass="math inline">\(a,b\)</span>是不全为零的整数，则方程<spanclass="math inline">\(ax+by=c有整数解\Leftrightarrow (a,b)\midc\)</span> &gt;个人理解：对于整数<spanclass="math inline">\(a,b\)</span>，他们的最大公因子就是使用这两个数能得到的最小度量&gt; &gt;换句话说，即长度为<spanclass="math inline">\(a,b\)</span>的两把尺子可以度量的最小长度</p></li></ul><h4 id="素数">素数</h4><ul><li>埃拉托色尼素数筛选法-快速计算<spanclass="math inline">\(1\)</span>到<spanclass="math inline">\(N\)</span>之间的所有素数：遍历<spanclass="math inline">\(1\)</span>到<spanclass="math inline">\(\sqrt{N}\)</span>，将其中所有素数的倍数去掉，剩下的便都是素数了</li><li>素性定理：<span class="math inline">\(p\)</span>为素数，<spanclass="math inline">\(a,b\)</span>为整数，若<spanclass="math inline">\(p\mid ab\)</span>，则<spanclass="math inline">\(p\mid a\)</span>或<spanclass="math inline">\(p\mid b\)</span> ^291cce</li><li>算数基本定理：任意整数<span class="math inline">\(n\(n&gt;1)\)</span>都可以分解为有限个素数的乘积<spanclass="math inline">\(n=p_1p_2...p_s\)</span>，该分解除了素数因子的排列之外，是唯一的</li><li>唯一因子分解定理：任意整数<span class="math inline">\(n\(n&gt;1)\)</span>可以唯一地表示成<spanclass="math inline">\(n=p_1^{\alpha_1}p_2^{\alpha_2}...p_s^{\alpha_s},\\alpha_i &gt;0\)</span>，其中<spanclass="math inline">\(p_1p_2...p_s\)</span>为素数<spanclass="math inline">\(p_i&lt;p_j\ (i&lt;j)\)</span>。上式叫做<spanclass="math inline">\(n\)</span>的标准分解式。</li></ul><p>整数的一些性质</p><ul><li><spanclass="math inline">\(a=p_1^{\alpha_1}p_2^{\alpha_2}...p_s^{\alpha_s},\b=p_1^{\beta_1}p_2^{\beta_2}...p_s^{\beta_s}\)</span>，那么<spanclass="math inline">\((a,b)=p_1^{\gamma_1}p_2^{\gamma_2}...p_s^{\gamma_s},\\gamma_i=min(\alpha_i,\beta_i)\)</span>，最小公倍数<spanclass="math inline">\([a,b]=p_1^{\delta_1}p_2^{\delta_2}...p_s^{\delta_s},\\delta_i=max(\alpha_i,\beta_i)\)</span></li><li><span class="math inline">\(a_1,a_2,...a_n\)</span>为<spanclass="math inline">\(n\)</span>个非零整数，令<spanclass="math inline">\([a_1,a_2]=m_1,\[m_1,a_3]=m_2,...,[m_{n-2},a_n]=m_{n-1}\)</span>，则<spanclass="math inline">\([a_1,a_2,...a_n]=m_{n-1}\)</span></li><li>除了2以外，所有素数都是奇素数</li></ul><h4 id="多项式的整除性">多项式的整除性</h4><ul><li>令<span class="math inline">\(\mathbb{Q}=\{\frac{a}{b}|a,b\in\mathbb{Z},b\neq0\}\)</span>表示全体有理数的集合。<spanclass="math inline">\(\mathbb{Q}\)</span>上有加减乘除四则运算</li><li>令<spanclass="math inline">\(\mathbb{Q}[x]=\{a_0+a_1x+...+a_nx^n|a_i\in\mathbb{Q},0\leqi\leq n\}\)</span>表示所有系数为有理数的多项式集合。<spanclass="math inline">\(\mathbb{Q}[x]\)</span>有加减乘，但没有除法</li><li>可以发现<spanclass="math inline">\(\mathbb{Q}[x]\)</span>与整数集合<spanclass="math inline">\(\mathbb{Z}\)</span>有很多类似的性质：都有带余除法、最大公因子、唯一因子分解定理等</li></ul><p>（多项式<span class="math inline">\(f(x)\)</span>的次数表示为<spanclass="math inline">\(deg\ f(x)\)</span>，以下多项式均在<spanclass="math inline">\(\mathbb{Q}[x]\)</span>内讨论）</p><ul><li><span class="math inline">\(g(x)\neq 0\)</span>，则有<spanclass="math inline">\(q(x),r(x)\)</span>使得<spanclass="math inline">\(f(x)=q(x)g(x)+r(x),\ r(x)=0或r(x)\neq 0,deg\ r(x)&lt; deg\ g(x)\)</span></li><li><span class="math inline">\(r(x)=0\)</span>时，称<spanclass="math inline">\(g(x)整除f(x)\)</span>，记<spanclass="math inline">\(g(x)|f(x)\)</span>，<spanclass="math inline">\(g(x)\)</span>称为<spanclass="math inline">\(f(x)\)</span>的因子</li><li>当<span class="math inline">\(g(x)\)</span>为<spanclass="math inline">\(f(x)\)</span>的因子，且<spanclass="math inline">\(deg\ g(x) &lt; deg\ f(x)\)</span>时，<spanclass="math inline">\(g(x)\)</span>称为<spanclass="math inline">\(f(x)\)</span>的真因子</li><li>当<spanclass="math inline">\(f(x)\)</span>没有真因子时，称为不可约多项式</li></ul><blockquote><p>个人理解：把函数的符号<spanclass="math inline">\(f,g\)</span>当成整数的符号来看，多项式的整除与整数的整除几乎相同，只是多了<spanclass="math inline">\(x\)</span>而已</p><p>因此其余的不再赘述：</p><p>多项式整除性质——参考整数整除性质</p><p>多项式最大公因子——参考整数最大公因子</p><p>多项式最大公因子的表示——参考整数最大公因子的表示（贝祖等式）</p><p>多项式最大公因子的求法——参考整数的辗转相除法</p><p>不可约多项式的有关定理——参考整数的素性定理</p><p>多项式的唯一分解定理——参考整数的唯一分解定理</p></blockquote><h3 id="同余式">同余式</h3><h3 id="二次剩余">二次剩余</h3><h2 id="抽象代数">抽象代数</h2><h3 id="群">群</h3><h3 id="环">环</h3><h3 id="域">域</h3><h3 id="有限域">有限域</h3><h2 id="参考">参考</h2>]]></content:encoded>
      
      
      <category domain="http://yunsaijc.top/categories/%E7%BD%91%E7%BB%9C%E7%A9%BA%E9%97%B4%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80/">网络空间安全基础</category>
      
      
      <category domain="http://yunsaijc.top/tags/%E6%95%B0%E5%AD%A6/">数学</category>
      
      <category domain="http://yunsaijc.top/tags/%E6%95%B0%E8%AE%BA/">数论</category>
      
      <category domain="http://yunsaijc.top/tags/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/">抽象代数</category>
      
      
      <comments>http://yunsaijc.top/2023/10/03/8-%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>关于HTTP反向代理的理解</title>
      <link>http://yunsaijc.top/2023/09/27/7-%E5%85%B3%E4%BA%8EHTTP%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E7%9A%84%E7%90%86%E8%A7%A3/</link>
      <guid>http://yunsaijc.top/2023/09/27/7-%E5%85%B3%E4%BA%8EHTTP%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E7%9A%84%E7%90%86%E8%A7%A3/</guid>
      <pubDate>Wed, 27 Sep 2023 05:48:59 GMT</pubDate>
      
        
        
      <description>&lt;h2 id=&quot;正向代理forward-proxy&quot;&gt;正向代理(Forward Proxy)&lt;/h2&gt;
&lt;p&gt;正向代理通常直接称为代理(&lt;code&gt;Proxy&lt;/code&gt;)，也就是日常情景下使用的各种&lt;code&gt;BrupSuite、梯子&lt;/code&gt;等的代理，需要我们手动进行配</description>
        
      
      
      
      <content:encoded><![CDATA[<h2 id="正向代理forward-proxy">正向代理(Forward Proxy)</h2><p>正向代理通常直接称为代理(<code>Proxy</code>)，也就是日常情景下使用的各种<code>BrupSuite、梯子</code>等的代理，需要我们手动进行配置。</p><h3 id="代理的作用">代理的作用</h3><ul><li>便于安全审计：所有流量经过一台代理服务器，那么安全审计就容易得多</li><li>加速访问/节省带宽：代理服务器可以返回缓存好的内容，无需向外网发出请求，从而加快访问速度、节省带宽</li><li>保护个人信息：使用代理隐藏自己的真实IP地址</li><li>突破访问限制：有时自己的地址被禁止访问，可以连接白名单上的代理服务器来进行访问</li></ul><h2 id="反向代理reverse-proxy">反向代理((Reverse Proxy)</h2><p>个人理解：类似于计算机网络中的NAT(网络地址转发)技术。用户并不知道自己被“反向代理”了，反向代理服务器(如<code>Nginx</code>)接收到请求后，转发给Web服务器(如<code>Apache</code>)进行处理。</p><p>为了方便阅读，此处开始用<code>Nginx</code>来指代<code>反向代理服务器</code>。</p><h3 id="反向代理作用">反向代理作用</h3><ul><li>负载均衡：访问压力大时，<code>Nginx</code>可以将请求分配给多个不同的Web服务器进行处理，而用户访问的地址仍然是相同的地址(即<code>Nginx</code>服务器的地址)</li><li>提高安全性：Web服务器对外不可见，此时<code>Nginx</code>相当于一个防火墙</li><li>节省IP资源：如上述对反向代理的个人理解所说，类似于NAT，能够节省IP资源</li><li>加速访问：<code>Nginx</code>同样可以缓存网页内容</li></ul><h2 id="总结">总结</h2><p>可以理解为：</p><ul><li>正向代理是面向用户的代理</li><li>反向代理是面向服务器的代理，对用户透明（也就是说把服务器也当成用户，服务器在给用户返回请求时自己挂了一个代理）</li></ul><h2 id="参考">参考</h2><blockquote><p><ahref="https://zhuanlan.zhihu.com/p/464965616">https://zhuanlan.zhihu.com/p/464965616</a></p><p><ahref="https://www.zhihu.com/question/388303662">https://www.zhihu.com/question/388303662</a></p><p><ahref="https://zhuanlan.zhihu.com/p/486180243">https://zhuanlan.zhihu.com/p/486180243</a></p></blockquote>]]></content:encoded>
      
      
      <category domain="http://yunsaijc.top/categories/%E5%AD%A6%E4%B9%A0%E6%9D%82%E8%AE%B0/">学习杂记</category>
      
      
      <category domain="http://yunsaijc.top/tags/Web/">Web</category>
      
      
      <comments>http://yunsaijc.top/2023/09/27/7-%E5%85%B3%E4%BA%8EHTTP%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E7%9A%84%E7%90%86%E8%A7%A3/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>HTB-sau Walkthrough</title>
      <link>http://yunsaijc.top/2023/09/17/6-HTB-sau-Walkthrough/</link>
      <guid>http://yunsaijc.top/2023/09/17/6-HTB-sau-Walkthrough/</guid>
      <pubDate>Sun, 17 Sep 2023 02:10:19 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;运行环境：macOS 13.2.1; Parallel Desktop: Kali Linux 2022.2 ARM64;
Windows 11&lt;/p&gt;
&lt;p&gt;靶机链接：&lt;a
href=&quot;https://app.hackthebox.com/mac</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>运行环境：macOS 13.2.1; Parallel Desktop: Kali Linux 2022.2 ARM64;Windows 11</p><p>靶机链接：<ahref="https://app.hackthebox.com/machines/Sau">https://app.hackthebox.com/machines/Sau</a></p></blockquote><h2 id="过程">过程</h2><h3 id="信息收集">信息收集</h3><p>基础的四项扫描： <img src="/2023/09/17/6-HTB-sau-Walkthrough/1.png" class=""></p><p>在端口扫描时，采用默认的<code>-sS</code>方式，能够扫到<code>-sT</code>方式扫不到的80和8338端口：</p><img src="/2023/09/17/6-HTB-sau-Walkthrough/2.png" class=""><img src="/2023/09/17/6-HTB-sau-Walkthrough/3.png" class=""><img src="/2023/09/17/6-HTB-sau-Walkthrough/4.png" class=""><img src="/2023/09/17/6-HTB-sau-Walkthrough/5.png" class=""><p>扫描完成后， 进行子目录爆破：</p><img src="/2023/09/17/6-HTB-sau-Walkthrough/6.png" class=""><h3 id="web部分">Web部分</h3><p>进入<code>hostname/web/</code>，发现是一个<code>request basket</code>的Web应用，可以收集各种请求：</p><img src="/2023/09/17/6-HTB-sau-Walkthrough/7.png" class=""><p>创建一个名为<code>sau</code>的basket：</p><img src="/2023/09/17/6-HTB-sau-Walkthrough/8.png" class=""><p>搜索发现该应用存在一个SSRF漏洞<code>CVE-2023-27163</code>：</p><img src="/2023/09/17/6-HTB-sau-Walkthrough/9.png" class=""><p>尝试使用网上的脚本进行利用，但没有成功：</p><img src="/2023/09/17/6-HTB-sau-Walkthrough/10.png" class=""><p>不再尝试网上的poc，继续往下进行。</p><p>搜索发现这是一个类似于代理的应用。在设置中可以设置目标的URL。</p><p>将访问<code>http://hostname/sau</code>的主机记为主机A（攻击机），主机A想要访问的主机记为主机B。</p><p><code>Forward URL</code>是需要转发到的地址，即主机B地址；</p><p><code>Proxy Response</code>勾选后，主机B的响应会发送回主机A；</p><p><code>Expand Forward</code>勾选后，主机A访问时扩展的部分会被添到<code>Forward URL</code>的后面。如：主机A访问<code>http://hostname/sau/login</code>，如果勾选该项，那么实际访问的就是<code>&#123;Forward URL&#125;/login</code>；否则就是<code>&#123;Forward URL&#125;</code>，后面的<code>/login</code>是无效的。</p><p>此处务必要注意勾选后面两个！否则后续的步骤不成立！</p><p>在端口扫描过程中发现了一个80端口，但不对外开放。此处将目标URL设为服务器本地地址的80端口进行尝试：</p><img src="/2023/09/17/6-HTB-sau-Walkthrough/11.png" class=""><h3 id="主机立足">主机立足</h3><p>设置完成后访问<code>http://hostname/sau</code>，是一个名为<code>Maltrail</code>的恶意流量监测应用。搜索其漏洞：</p><img src="/2023/09/17/6-HTB-sau-Walkthrough/12.png" class=""><p>下载poc镜像到本地，利用成功。获得shell：</p><img src="/2023/09/17/6-HTB-sau-Walkthrough/13.png" class=""><p>获得userflag：</p><img src="/2023/09/17/6-HTB-sau-Walkthrough/14.png" class=""><h3 id="提权">提权</h3><p>通过<code>sudo -l</code>查看权限后，在GTFOBins查找提权方法并进行提权：</p><img src="/2023/09/17/6-HTB-sau-Walkthrough/15.png" class=""><p>获得systemflag：</p><img src="/2023/09/17/6-HTB-sau-Walkthrough/16.png" class=""><h2 id="总结">总结</h2><ol type="1"><li>Request-basket存在SSRF，可以访问服务器本地的80端口</li><li>Maltrail自身存在漏洞</li></ol>]]></content:encoded>
      
      
      <category domain="http://yunsaijc.top/categories/%E9%9D%B6%E6%9C%BAWalkthrough/">靶机Walkthrough</category>
      
      
      <category domain="http://yunsaijc.top/tags/HTB/">HTB</category>
      
      <category domain="http://yunsaijc.top/tags/RedTeam/">RedTeam</category>
      
      
      <comments>http://yunsaijc.top/2023/09/17/6-HTB-sau-Walkthrough/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>HTB-cozyhosting Walkthrough</title>
      <link>http://yunsaijc.top/2023/09/10/5-HTB-cozyhosting-Walkthrough/</link>
      <guid>http://yunsaijc.top/2023/09/10/5-HTB-cozyhosting-Walkthrough/</guid>
      <pubDate>Sun, 10 Sep 2023 01:58:56 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;运行环境：macOS 13.2.1; Parallel Desktop: Kali Linux 2022.2 ARM64;
Windows 11&lt;/p&gt;
&lt;p&gt;靶机链接：Seasonal靶机&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;过程</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>运行环境：macOS 13.2.1; Parallel Desktop: Kali Linux 2022.2 ARM64;Windows 11</p><p>靶机链接：Seasonal靶机</p></blockquote><h2 id="过程">过程</h2><h3 id="信息收集">信息收集</h3><p>在<code>/etc/hosts</code>中添加域名DNS后，使用<code>dirsearch</code>进行子目录爆破：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/1.png" class=""><h3 id="web部分">Web部分</h3><p>访问<code>/actuator</code>，这是<code>spring</code>框架下的一个组件：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/2.png" class="" title="截屏2023-09-04 22.24.05"><p>查看<code>/actuator/sessions</code>可以获得该站点的<code>SESSIONID</code>，其中<code>jq</code>命令用于处理JSON数据：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/3.png" class="" title="截屏2023-09-05 10.17.15"><p>在登录页面输入，提交后抓包修改<code>SESSIONID</code>。此后每一个数据包均对<code>SESSIONID</code>进行修改，即可登录admin页面</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/4.png" class="" title="截屏2023-09-05 10.18.02"><p>登录admin页面后发现存在两处输入框。其中<code>username</code>参数存在RCE，尝试反弹shell：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/5.png" class="" title="截屏2023-09-05 11.06.24"><p>上述方式没有成功，尝试使用curl方式反弹shell。在kali的<code>/var/www/html</code>目录下创建脚本文件，并打开apache服务：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/6.png" class="" title="截屏2023-09-05 11.14.47"><p>使用curl命令反弹shell，可以发现已经成功获得shell：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/7.png" class="" title="截屏2023-09-05 11.15.07"><h3 id="主机立足">主机立足</h3><p>查看当前目录，发现存在一个jar文件。尝试scp方式，但服务器未开启ssh服务。转而使用python开启服务：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/8.png" class="" title="截屏2023-09-06 09.09.31"><p>从而在kali上可以下载到该文件：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/9.png" class="" title="截屏2023-09-06 09.09.37"><p>审阅该文件发现存在数据库的登录信息：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/10.png" class="" title="截屏2023-09-06 09.25.10"><p>还可以使用如下命令，无需打开jar包，直接对敏感信息进行查找：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/11.png" class="" title="截屏2023-09-06 09.32.13"><p>使用该登录信息登录数据库，查看现有数据库并切换到<code>cozyhosting</code>数据库：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/12.png" class="" title="截屏2023-09-06 10.19.45"><p>查看现有表，并查看<code>users</code>表中的内容，获得两个登录密码的哈希值：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/13.png" class="" title="截屏2023-09-06 10.22.05"><p>使用<code>john</code>破解得到某一用户的登录密码：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/14.png" class="" title="截屏2023-09-06 11.53.02"><p>查看<code>/home</code>目录，以查看登录所需的用户名：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/15.png" class="" title="截屏2023-09-06 11.53.57"><p>使用<code>josh</code>用户和破解得到的密码进行ssh登录：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/16.png" class="" title="截屏2023-09-06 11.54.40"><p>得到userflag：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/17.png" class="" title="截屏2023-09-06 11.57.22"><h3 id="提权">提权</h3><p>查看当前用户权限，可以免密以root身份运行ssh：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/18.png" class="" title="截屏2023-09-06 11.59.35"><p>在GTFOBins查找提权命令：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/19.png" class="" title="截屏2023-09-06 12.01.23"><p>提权成功，获得systemflag：</p><img src="/2023/09/10/5-HTB-cozyhosting-Walkthrough/20.png" class="" title="截屏2023-09-06 12.06.06"><h2 id="总结">总结</h2><ol type="1"><li>spring框架下的actuator组件，存在敏感信息泄漏漏洞。从而导致session会话劫持攻击</li><li>admin页面存在RCE漏洞</li><li>jar包存在敏感信息泄漏漏洞</li></ol>]]></content:encoded>
      
      
      <category domain="http://yunsaijc.top/categories/%E9%9D%B6%E6%9C%BAWalkthrough/">靶机Walkthrough</category>
      
      
      <category domain="http://yunsaijc.top/tags/HTB/">HTB</category>
      
      <category domain="http://yunsaijc.top/tags/RedTeam/">RedTeam</category>
      
      
      <comments>http://yunsaijc.top/2023/09/10/5-HTB-cozyhosting-Walkthrough/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>HTB-keeper Walkthrough</title>
      <link>http://yunsaijc.top/2023/09/07/4-HTB-keeper-Walkthrough/</link>
      <guid>http://yunsaijc.top/2023/09/07/4-HTB-keeper-Walkthrough/</guid>
      <pubDate>Thu, 07 Sep 2023 02:03:54 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;运行环境：macOS 13.2.1; Parallel Desktop: Kali Linux 2022.2 ARM64;
Windows 11&lt;/p&gt;
&lt;p&gt;靶机链接：&lt;a
href=&quot;https://app.hackthebox.com/mac</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>运行环境：macOS 13.2.1; Parallel Desktop: Kali Linux 2022.2 ARM64;Windows 11</p><p>靶机链接：<ahref="https://app.hackthebox.com/machines/Keeper">https://app.hackthebox.com/machines/Keeper</a></p></blockquote><h2 id="过程">过程</h2><h3 id="信息收集">信息收集</h3><p>首先进行4项基本扫描：端口扫描，详细信息扫描，UDP扫描，漏洞扫描</p><img src="/2023/09/07/4-HTB-keeper-Walkthrough/1.png" class=""><p>发现22和80端口开放：</p><img src="/2023/09/07/4-HTB-keeper-Walkthrough/2.png" class=""><img src="/2023/09/07/4-HTB-keeper-Walkthrough/3.png" class=""><img src="/2023/09/07/4-HTB-keeper-Walkthrough/4.png" class=""><h3 id="web部分">Web部分</h3><p>访问Web页面：</p><img src="/2023/09/07/4-HTB-keeper-Walkthrough/5.png" class=""><p>在<code>/etc/hosts</code>中添加ip和域名：</p><img src="/2023/09/07/4-HTB-keeper-Walkthrough/6.png" class=""><p>访问前面提到的域名，是一个登录页面。查看该开源项目(RT)的源码可以得到默认的用户名和密码<code>root:password</code>，尝试登录：</p><img src="/2023/09/07/4-HTB-keeper-Walkthrough/7.png" class=""><p>成功登录之后，找到某个用户的用户名和密码信息：</p><img src="/2023/09/07/4-HTB-keeper-Walkthrough/8.png" class=""><h3 id="主机立足">主机立足</h3><p>使用上述信息尝试ssh登录，成功。获得userflag：</p><img src="/2023/09/07/4-HTB-keeper-Walkthrough/9.png" class=""><h3 id="提权">提权</h3><p>解压<code>RT30000.zip</code>后发现是有关Keepass的两个文件。通过搜索引擎找到该软件的漏洞<code>CVE-2023-32784</code>：</p><img src="/2023/09/07/4-HTB-keeper-Walkthrough/10.png" class=""><p>找到该漏洞的poc：</p><img src="/2023/09/07/4-HTB-keeper-Walkthrough/11.png" class=""><p>通过scp将该poc上传到服务器并执行，获得可能的Keepass主密码，但难以辨认其中的字符：</p><img src="/2023/09/07/4-HTB-keeper-Walkthrough/12.png" class=""><p>OCR之后搜索一下首个字符串，发现是某道菜名：</p><img src="/2023/09/07/4-HTB-keeper-Walkthrough/13.png" class=""><p>将服务器上的<code>kdbx</code>文件下载到本地：</p><img src="/2023/09/07/4-HTB-keeper-Walkthrough/14.png" class=""><p>打开<code>kdbx</code>文件，将该菜名作为主密码登录（注意首字母改成小写）：</p><img src="/2023/09/07/4-HTB-keeper-Walkthrough/15.png" class=""><p>获得一个密码和一个<code>putty</code>文件的内容。将该密码作为<code>root</code>用户的密码ssh登录失败，可能是因为没有开启密码登录：</p><img src="/2023/09/07/4-HTB-keeper-Walkthrough/16.png" class=""><p>将<code>putty</code>文件的内容保存为<code>ppk</code>文件：</p><img src="/2023/09/07/4-HTB-keeper-Walkthrough/17.png" class=""><p>通过命令<code>putty -i ./putty.ppk</code>指定该文件，并打开putty，登录服务器：</p><img src="/2023/09/07/4-HTB-keeper-Walkthrough/18.png" class=""><p>可以看到能够直接以<code>root</code>用户身份登录，获得systemflag：</p><img src="/2023/09/07/4-HTB-keeper-Walkthrough/19.png" class=""><h2 id="总结">总结</h2><ol type="1"><li>应用RT框架时存在弱密码漏洞（使用默认密码）</li><li>Keepass自身存在漏洞</li></ol>]]></content:encoded>
      
      
      <category domain="http://yunsaijc.top/categories/%E9%9D%B6%E6%9C%BAWalkthrough/">靶机Walkthrough</category>
      
      
      <category domain="http://yunsaijc.top/tags/HTB/">HTB</category>
      
      <category domain="http://yunsaijc.top/tags/RedTeam/">RedTeam</category>
      
      
      <comments>http://yunsaijc.top/2023/09/07/4-HTB-keeper-Walkthrough/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>联邦学习+差分隐私项目记录</title>
      <link>http://yunsaijc.top/2023/01/08/3-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0+%E5%B7%AE%E5%88%86%E9%9A%90%E7%A7%81%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/</link>
      <guid>http://yunsaijc.top/2023/01/08/3-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0+%E5%B7%AE%E5%88%86%E9%9A%90%E7%A7%81%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/</guid>
      <pubDate>Sun, 08 Jan 2023 05:44:45 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;本项目为联邦学习+差分隐私的实现(暂且记为myFed)。支持同步、异步、半异步（默认）机制。&lt;/p&gt;
&lt;p&gt;项目仓库：&lt;a
href=&quot;https://github.com/yunsaijc/2023-Federated-Learning-and-Differential-</description>
        
      
      
      
      <content:encoded><![CDATA[<p>本项目为联邦学习+差分隐私的实现(暂且记为myFed)。支持同步、异步、半异步（默认）机制。</p><p>项目仓库：<ahref="https://github.com/yunsaijc/2023-Federated-Learning-and-Differential-Privacy">https://github.com/yunsaijc/2023-Federated-Learning-and-Differential-Privacy</a></p><p>本代码基于以下仓库实现：<ahref="https://github.com/wenzhu23333/Differential-Privacy-Based-Federated-Learning">https://github.com/wenzhu23333/Differential-Privacy-Based-Federated-Learning</a></p><p>主要参考文献：</p><blockquote><p>FedSA: A Semi-Asynchronous Federated Learning Mechanism inHeterogeneous Edge Computing</p><p>Federated Learning With Differential Privacy: Algorithms andPerformance Analysis</p></blockquote><h2 id="重要参数定义与说明">重要参数定义与说明</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">M//每一轮参与全局训练的客户数量</span><br><span class="line">N//客户数量</span><br><span class="line">K//全局更新的轮数</span><br><span class="line">tau//陈旧度</span><br><span class="line">epsilon//隐私预算</span><br></pre></td></tr></table></figure><h2 id="项目目的">项目目的</h2><p>本项目主要目的是学习理解联邦学习的工作过程。探究联邦学习加上差分隐私后的效果；同时考察在半异步机制下，不同M值对于准确率和收敛时间带来的影响。</p><h2 id="项目结构">项目结构</h2><p>项目文件结构及说明如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">myFed</span><br><span class="line">│  myFed.py//项目main文件</span><br><span class="line">│  requirements.txt//依赖包与版本</span><br><span class="line">│</span><br><span class="line">├─data//存放数据集文件</span><br><span class="line">├─log//代码运行记录</span><br><span class="line">├─models//网络模型相关文件</span><br><span class="line">│  │  Fed.py        //全局更新函数</span><br><span class="line">│  │  Nets.py       //网络模型定义函数</span><br><span class="line">│  │  test.py       //测试准确率函数</span><br><span class="line">│  │  Update.py     //本地更新函数</span><br><span class="line">│</span><br><span class="line">├─utils//存放一些使用到的函数</span><br><span class="line">│  │  dataset.py            //数据集有关函数</span><br><span class="line">│  │  dp_mechanism.py       //与dp有关的函数</span><br><span class="line">│  │  Functions.py          //其他函数</span><br><span class="line">│  │  language_utils.py     //与特定语言模型有关的函数</span><br><span class="line">│  │  options.py            //命令行参数设置函数</span><br><span class="line">│  │  sampling.py           //数据集划分函数</span><br></pre></td></tr></table></figure><h2 id="实验设置">实验设置</h2><p>本项目中，我进行了多次实验。各个实验设置如下：（数据分布：IID/Non-IID；数据集：MNIST/CIFAR-10）</p><ol type="1"><li>半异步机制联邦学习+差分隐私，设置不同N值。</li><li>半异步机制联邦学习+差分隐私，设置不同M值。</li><li>五种机制对比：myFed, FedSA, FedAsync, FedAP, FedAF；</li></ol><h2 id="实验结果分析">实验结果分析</h2><h3 id="设置不同n值">1. 设置不同N值</h3><p>在不同的N值之下，各个客户端陈旧度的最大值随着N值的增大而增加。如下图所示：</p><img src="/2023/01/08/3-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0+%E5%B7%AE%E5%88%86%E9%9A%90%E7%A7%81%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/tau_iid_CNN_MNIST-16731516267212.png" class=""><h3 id="设置不同m值">2. 设置不同M值</h3><p>令N的值固定，变量为M的值。在IID数据集下的实验结果如下图所示（图例中的值为<spanclass="math inline">\(\frac{M}{N}\)</span>）。可以发现，当M的值较小时，收敛速度更快，并且准确率也有略微的领先。</p><img src="/2023/01/08/3-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0+%E5%B7%AE%E5%88%86%E9%9A%90%E7%A7%81%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/4_acc_iid_CNN_MNIST.png" class=""><p>在Non-IID数据集下的实验结果如下图所示。可以发现，当数据分布为Non-IID时，仍然是M的值较小时，准确率上升地更快；但是M较小时的准确率波动程度较大，甚至会无法收敛；而M的值较大时虽然准确率上升更慢，但准确率是较为稳定，并且能够收敛的。</p><img src="/2023/01/08/3-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0+%E5%B7%AE%E5%88%86%E9%9A%90%E7%A7%81%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/4_acc_N-iid_CNN_MNIST.png" class=""><h3 id="五种机制对比">3. 五种机制对比</h3><p>本实验将myFed(半异步), FedSA(半异步), FedAsync(异步), FedAP(同步),FedAF(同步)五种机制的性能进行了对比。</p><p>MNIST数据集，IID分布下。</p><img src="/2023/01/08/3-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0+%E5%B7%AE%E5%88%86%E9%9A%90%E7%A7%81%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/acc_iid_CNN_MNIST.png" class=""><p>MNIST数据集，Non-IID分布下。</p><img src="/2023/01/08/3-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0+%E5%B7%AE%E5%88%86%E9%9A%90%E7%A7%81%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/acc_N-iid_CNN_MNIST.png" class=""><p>CIFAR-10数据集，IID分布下。</p><img src="/2023/01/08/3-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0+%E5%B7%AE%E5%88%86%E9%9A%90%E7%A7%81%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/acc_iid_CNN_CIFAR.png" class=""><p>CIFAR-10数据集，Non-IID分布下。</p><img src="/2023/01/08/3-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0+%E5%B7%AE%E5%88%86%E9%9A%90%E7%A7%81%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/acc_N-iid_CNN_CIFAR.png" class=""><h2 id="参考">参考</h2><blockquote><p>Q. Ma, Y. Xu, H. Xu, Z. Jiang, L. Huang and H. Huang, "FedSA: ASemi-Asynchronous Federated Learning Mechanism in Heterogeneous EdgeComputing," in IEEE Journal on Selected Areas in Communications, vol.39, no. 12, pp. 3654-3672, Dec. 2021, doi:10.1109/JSAC.2021.3118435.</p><p>K. Wei et al., "Federated Learning With Differential Privacy:Algorithms and Performance Analysis," in IEEE Transactions onInformation Forensics and Security, vol. 15, pp. 3454-3469, 2020, doi:10.1109/TIFS.2020.2988575.</p><p><ahref="https://blog.csdn.net/qq_36018871/article/details/121361027">https://blog.csdn.net/qq_36018871/article/details/121361027</a></p><p><ahref="https://zhuanlan.zhihu.com/p/263959892?utm_source=wechat_session">https://zhuanlan.zhihu.com/p/263959892?utm_source=wechat_session</a></p><p><ahref="https://blog.csdn.net/m0_54487794/article/details/121674633">https://blog.csdn.net/m0_54487794/article/details/121674633</a></p><p><ahref="https://blog.csdn.net/wenzhu2333/article/details/124556920?spm=1001.2014.3001.5501">https://blog.csdn.net/wenzhu2333/article/details/124556920?spm=1001.2014.3001.5501</a></p><p><ahref="https://zhuanlan.zhihu.com/p/348290670">https://zhuanlan.zhihu.com/p/348290670</a></p><p><ahref="https://blog.csdn.net/Lyn_S/article/details/119661088">https://blog.csdn.net/Lyn_S/article/details/119661088</a></p><p><ahref="https://www.zhihu.com/question/354819140">https://www.zhihu.com/question/354819140</a></p><p><ahref="https://zhuanlan.zhihu.com/p/142597513">https://zhuanlan.zhihu.com/p/142597513</a></p><p><ahref="https://blog.csdn.net/qq_41769289/article/details/87694955">https://blog.csdn.net/qq_41769289/article/details/87694955</a></p><p><ahref="https://blog.fangzhou.me/posts/20190224-gradient-descent/#l-smooth-and-%CE%BC-strongly-convex-function">https://blog.fangzhou.me/posts/20190224-gradient-descent/#l-smooth-and-%CE%BC-strongly-convex-function</a></p><p><ahref="https://blog.fangzhou.me/posts/20190217-convex-function-lipschitz-smooth-strongly-convex/#strongly-convex">https://blog.fangzhou.me/posts/20190217-convex-function-lipschitz-smooth-strongly-convex/#strongly-convex</a></p><p><ahref="https://blog.csdn.net/qsczse943062710/article/details/76423509">https://blog.csdn.net/qsczse943062710/article/details/76423509</a></p><p><ahref="https://blog.csdn.net/qq_42589613/article/details/110296048">https://blog.csdn.net/qq_42589613/article/details/110296048</a></p><p><ahref="https://blog.csdn.net/PanYHHH/article/details/107361827">https://blog.csdn.net/PanYHHH/article/details/107361827</a></p><p><ahref="https://zhuanlan.zhihu.com/p/40761721">https://zhuanlan.zhihu.com/p/40761721</a></p></blockquote>]]></content:encoded>
      
      
      <category domain="http://yunsaijc.top/categories/%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/">项目记录</category>
      
      
      <category domain="http://yunsaijc.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/">机器学习</category>
      
      <category domain="http://yunsaijc.top/tags/%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0/">联邦学习</category>
      
      <category domain="http://yunsaijc.top/tags/%E5%B7%AE%E5%88%86%E9%9A%90%E7%A7%81/">差分隐私</category>
      
      <category domain="http://yunsaijc.top/tags/CNN/">CNN</category>
      
      
      <comments>http://yunsaijc.top/2023/01/08/3-%E8%81%94%E9%82%A6%E5%AD%A6%E4%B9%A0+%E5%B7%AE%E5%88%86%E9%9A%90%E7%A7%81%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Django+Vue 项目记录</title>
      <link>http://yunsaijc.top/2022/12/09/2-Django+Vue/</link>
      <guid>http://yunsaijc.top/2022/12/09/2-Django+Vue/</guid>
      <pubDate>Fri, 09 Dec 2022 14:37:04 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;技术栈：Vue + Django + MySQL&lt;/p&gt;
&lt;p&gt;IDE：Pycharm&lt;/p&gt;
&lt;p&gt;本项目为2022秋北航网络空间安全学院数据库实验课程作业。作业需要进行简单的全栈开发。时间紧迫，且本人初次接触Vue，过程中遇到了许多问题。在此记录项目的开发过程。&lt;/p&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p>技术栈：Vue + Django + MySQL</p><p>IDE：Pycharm</p><p>本项目为2022秋北航网络空间安全学院数据库实验课程作业。作业需要进行简单的全栈开发。时间紧迫，且本人初次接触Vue，过程中遇到了许多问题。在此记录项目的开发过程。</p><p>项目GitHub仓库：<ahref="https://github.com/yunsaijc/2022-Autumn-DB_Lab3-Django-Vue-Project.git">https://github.com/yunsaijc/2022-Autumn-DB_Lab3-Django-Vue-Project.git</a></p><h2 id="后端-django">后端-Django</h2><h3 id="初始化与配置">初始化与配置</h3><h4 id="新建项目">新建项目</h4><p>通过命令<code>django-admin startproject project_name</code>来在当前路径下创建一个新的项目，项目文件夹结构如下：</p><img src="/2022/12/09/2-Django+Vue/image-20221118234718172.png" class=""><p>随后通过命令<code>python manage.py startapp app_name</code>来创建一个app，并将该app的名字加入到项目文件夹的<code>settings.py</code>下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">&#x27;api&#x27;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>在该app文件夹下创建一个<code>urls.py</code>用于管理<code>url</code>，文件夹目录结构如下：</p><img src="/2022/12/09/2-Django+Vue/image-20221118234925903.png" class=""><h4 id="连接数据库">连接数据库</h4><p>在项目文件夹的<code>settings.py</code>下设置数据库信息：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;ENGINE&#x27;</span>: <span class="string">&#x27;django.db.backends.mysql&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;NAME&#x27;</span>: <span class="string">&#x27;DB_Lab3&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;HOST&#x27;</span>: <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PORT&#x27;</span>: <span class="string">&#x27;3306&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;PASSWORD&#x27;</span>: <span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;OPTIONS&#x27;</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;init_command&#x27;</span>: <span class="string">&quot;SET sql_mode=&#x27;STRICT_TRANS_TABLES&#x27;&quot;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同时在项目文件夹的<code>__init__.py</code>下配置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line">pymysql.install_as_MySQLdb()</span><br></pre></td></tr></table></figure><p>然后运行命令<code>python manage.py makemigrations</code>生成迁移文件，再通过<code>python manage.py migrate</code>进行迁移，最后运行<code>python manage.py inspectdb &gt; users/models.py</code>，这时候app文件夹下的<code>models.py</code>就会根据数据库中的表自动生成类。</p><h4 id="跨站点请求设置">跨站点请求设置</h4><p>需要进行跨站点请求的相关设置。首先通过<code>pip</code>安装<code>django-cors-headers</code>包，然后在<code>settings.py</code>下进行设置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    ......</span><br><span class="line">    <span class="string">&#x27;corsheaders&#x27;</span>,</span><br><span class="line">    ......</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">MIDDLEWARE = [</span><br><span class="line">    ......</span><br><span class="line">    <span class="string">&#x27;corsheaders.middleware.CorsMiddleware&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;django.middleware.common.CommonMiddleware&#x27;</span>,</span><br><span class="line">    ......</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">CORS_ORIGIN_ALLOW_ALL = <span class="literal">True</span></span><br><span class="line">CORS_ALLOW_CREDENTIALS = <span class="literal">True</span></span><br></pre></td></tr></table></figure><h3 id="具体实现">具体实现</h3><p>后端逻辑的实现在<code>app</code>文件夹的<code>views.py</code>文件中完成，在本项目中也就是<code>/api/views.py</code>。其中登录函数的代码如下所示，完整代码见Github仓库。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">login</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">&#x27;POST&#x27;</span>:</span><br><span class="line">        username = request.POST.get(<span class="string">&#x27;username&#x27;</span>)</span><br><span class="line">        password = request.POST.get(<span class="string">&#x27;password&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> username == <span class="string">&#x27;&#x27;</span> <span class="keyword">or</span> password == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            <span class="keyword">return</span> JsonResponse(&#123;<span class="string">&#x27;errno&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&quot;用户名或密码为空&quot;</span>&#125;)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            user = Users.objects.get(user_name=username)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> JsonResponse(&#123;<span class="string">&#x27;errno&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&quot;用户不存在&quot;</span>&#125;)</span><br><span class="line">        <span class="keyword">if</span> password == user.pass_word:</span><br><span class="line">            <span class="keyword">return</span> JsonResponse(&#123;<span class="string">&#x27;errno&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&quot;登录成功&quot;</span>, <span class="string">&#x27;username&#x27;</span>: username&#125;)</span><br><span class="line">        <span class="keyword">return</span> JsonResponse(&#123;<span class="string">&#x27;errno&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&quot;密码不正确&quot;</span>&#125;)</span><br><span class="line">    <span class="keyword">return</span> JsonResponse(&#123;<span class="string">&#x27;errno&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&quot;请求方法错误&quot;</span>&#125;)</span><br></pre></td></tr></table></figure><h2 id="前端-vue">前端-Vue</h2><h3 id="初始化">初始化</h3><p>创建项目：<code>vue create project_name</code>，选择<code>vuex</code>（前端状态存储管理）和<code>router</code>（路由管理）</p><p>项目结构如下。其中<code>src</code>文件夹存放源代码，<code>dist</code>文件夹存放<code>npm run build</code>，命令编译后生成的文件：</p><img src="/2022/12/09/2-Django+Vue/image-20221209175859510.png" class=""><p><code>src</code>文件夹结构如下：</p><img src="/2022/12/09/2-Django+Vue/image-20221209180008500.png" class=""><p>各个目录或文件的说明如下：</p><table><colgroup><col style="width: 16%" /><col style="width: 83%" /></colgroup><thead><tr class="header"><th>目录/文件</th><th>说明</th></tr></thead><tbody><tr class="odd"><td>node_modules</td><td>npm 加载的项目依赖模块</td></tr><tr class="even"><td>public</td><td>静态资源，build 构建后为根目录，含网站导航栏图标、首页入口文件</td></tr><tr class="odd"><td>src</td><td>开发做的事情基本都在这个目录下，含： • assets:放置一些图片、字体等资源 • components: 放置组件文件，一般为全局组件 •router: 网站路由跳转设置 • store: 前端数据存储 • views: 放置各页面文件 •App.vue: 项目入口文件 • main.js:项目的核心文件，在这里可以导入各种全局依赖</td></tr><tr class="even"><td>.xxx文件</td><td>配置文件，包括语法配置、git配置(.gitignore)等</td></tr><tr class="odd"><td>package.json</td><td>项目配置文件</td></tr><tr class="even"><td>README.md</td><td>项目的说明文档</td></tr></tbody></table><h3 id="文件结构理解">文件结构理解</h3><ol type="1"><li><p>入口的<code>main.js</code>文件引入<code>vue</code>框架和<code>App.vue</code>主组件，然后实例化<code>vue</code>对象，在<code>components</code>属性中定义组件名</p></li><li><p><code>App.vue</code>主组件，里面集合了<code>html, js, css</code>语法，分别对应<code>vue</code>文件的<code>&lt;template&gt;, &lt;script&gt;, &lt;style&gt;</code>部分。</p><p>在此主组件文件中，也可以引用其他子组件，引用时在<code>script</code>标签所在的<code>js</code>中用<code>import</code>引入，然后在实例化<code>vue</code>对象中的<code>components</code>中定义名字，然后在<code>template</code>所在的<code>html</code>中运用</p></li><li><p>子组件在<code>components</code>文件中，一般此文件夹中放置的都是子组件，被<code>App.vue</code>主组件引用</p></li></ol><h3 id="具体实现-1">具体实现</h3><p>前端的实现在<code>appfront</code>文件夹的<code>views</code>文件夹中完成，在本项目中也就是<code>/appfront/views</code>。其中登录页面的代码如下所示，完整代码见Github仓库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;login&quot; class=&quot;login&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;wrap&quot;&gt;</span><br><span class="line">      &lt;h1&gt;登 录&lt;/h1&gt;</span><br><span class="line">      &lt;h2 v-if=&quot;userInfo!=null&quot;&gt;您已经以 &#123;&#123;userInfo.user.username&#125;&#125; 的身份登录&lt;/h2&gt;</span><br><span class="line">      &lt;el-form ref=&quot;form&quot; class=&quot;form&quot;&gt;</span><br><span class="line">        &lt;el-form-item prop=&quot;username&quot;&gt;</span><br><span class="line">          &lt;el-input placeholder=&quot;用户名&quot; type=&quot;username&quot; v-model=&quot;username&quot; autocomplete=&quot;off&quot;&gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;el-form-item id=&quot;password&quot; prop=&quot;password&quot;&gt;</span><br><span class="line">          &lt;el-input placeholder=&quot;密码&quot; show-password type=&quot;password&quot; v-model=&quot;password&quot; autocomplete=&quot;off&quot; @keyup.enter.native=&quot;login&quot; &gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/el-form-item&gt;</span><br><span class="line">        &lt;div &gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; @click=&quot;click_login&quot;&gt;登&amp;nbsp;&amp;nbsp;录&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button type=&quot;primary&quot; @click=&quot;click_register&quot;&gt;注&amp;nbsp;&amp;nbsp;册&lt;/el-button&gt;</span><br><span class="line">          &lt;el-button v-if=&quot;userInfo!=null&quot; type=&quot;danger&quot; @click=&quot;click_logout&quot;&gt;登&amp;nbsp;&amp;nbsp;出&lt;/el-button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/el-form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import qs from &quot;qs&quot;;</span><br><span class="line">import user from &quot;@/store/user&quot;</span><br><span class="line">const userInfo = user.getters.getUser(user.state());</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;login&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      userInfo,</span><br><span class="line">      username: &#x27;&#x27;,</span><br><span class="line">      password: &#x27;&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted: function() &#123;</span><br><span class="line">    this.username = userInfo.user.username</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    click_login() &#123;</span><br><span class="line">      this.$axios(&#123;</span><br><span class="line">        method: &#x27;post&#x27;,</span><br><span class="line">        url: &#x27;/api/login/&#x27;, </span><br><span class="line">        data: qs.stringify(&#123;</span><br><span class="line">          username: this.username,</span><br><span class="line">          password: this.password</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">      .then(res =&gt; &#123;</span><br><span class="line">        switch (res.data.errno) &#123;</span><br><span class="line">          case 0:</span><br><span class="line">            window.alert(&quot;登录成功！&quot;);</span><br><span class="line">            /* 将后端返回的 user 信息使用 vuex 存储起来 */</span><br><span class="line">            this.$store.dispatch(&#x27;saveUserInfo&#x27;, &#123;</span><br><span class="line">              user: &#123;</span><br><span class="line">                &#x27;username&#x27;: res.data.username</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            location.reload();</span><br><span class="line">            break;</span><br><span class="line">          default:</span><br><span class="line">            window.alert(&quot;登录失败！&quot; + res.data.msg);</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(err =&gt; &#123;</span><br><span class="line">        console.log(err);         /* 若出现异常则在终端输出相关信息 */</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    click_register() &#123;</span><br><span class="line">      this.$axios(&#123;</span><br><span class="line">        method: &#x27;post&#x27;,</span><br><span class="line">        url: &#x27;/api/register/&#x27;,</span><br><span class="line">        data: qs.stringify(&#123;</span><br><span class="line">          username: this.username,</span><br><span class="line">          password: this.password</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">      .then(res =&gt; &#123;</span><br><span class="line">        switch (res.data.errno) &#123;</span><br><span class="line">          case 0:</span><br><span class="line">            window.alert(&quot;注册成功！&quot;);</span><br><span class="line">            break;</span><br><span class="line">          default:</span><br><span class="line">            window.alert(&quot;注册失败！&quot; + res.data.msg);</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">      .catch(err =&gt; &#123;</span><br><span class="line">        console.log(err);         /* 若出现异常则在终端输出相关信息 */</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    click_logout() &#123;</span><br><span class="line">      this.$store.dispatch(&#x27;clear&#x27;);</span><br><span class="line">      window.alert(&#x27;登出成功！&#x27;);</span><br><span class="line">      location.reload();</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">#login &#123;</span><br><span class="line">  font-family: &#x27;Noto Serif SC&#x27;, serif;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">#login &gt;&gt;&gt; .el-input__inner &#123;</span><br><span class="line">  font-family: &#x27;Noto Serif SC&#x27;, serif;</span><br><span class="line">&#125;</span><br><span class="line">#login .bgbox &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  opacity: 1;</span><br><span class="line">  z-index: -3;</span><br><span class="line">  position: fixed;</span><br><span class="line">  left: 0;</span><br><span class="line">  top: 0;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 100%;</span><br><span class="line">  object-fit: cover;</span><br><span class="line">  transition: opacity 1s,transform .25s,filter .25s;</span><br><span class="line">  backface-visibility: hidden;</span><br><span class="line">&#125;</span><br><span class="line">#login .logo &#123;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">  height: 150px;</span><br><span class="line">&#125;</span><br><span class="line">#login .wrap &#123;</span><br><span class="line">  width: 300px;</span><br><span class="line">  height: 315px;</span><br><span class="line">  padding: 0 25px 0 25px;</span><br><span class="line">  line-height: 40px;</span><br><span class="line">  position: relative;</span><br><span class="line">  display: inline-block;</span><br><span class="line">  background-color: rgba(255, 255, 255, 0.85);</span><br><span class="line">  border-radius: 20px;</span><br><span class="line">&#125;</span><br><span class="line">#login .btn_login &#123;</span><br><span class="line">  margin-top: 25px;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">#login .btn_login button&#123;</span><br><span class="line">  line-height: 10px;</span><br><span class="line">  font-family: &#x27;Noto Serif SC&#x27;, serif;</span><br><span class="line">  width: 70%;</span><br><span class="line">  height: 38px;</span><br><span class="line">&#125;</span><br><span class="line">#login .suffix &#123;</span><br><span class="line">  font-size:14px;</span><br><span class="line">  line-height:10px;</span><br><span class="line">  color:#999;</span><br><span class="line">  cursor: pointer;</span><br><span class="line">  float:right;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="将vue与django绑定">将Vue与Django绑定</h2><p>在前端文件夹下运行命令<code>npm run build</code>进行编译</p><p>目前我们已经分别完成了Django后端和Vue前端工程的创建和编写，但实际上它们是运行在各自的服务器上。因此我们须要把Django的·TemplateView·指向我们刚才生成的前端dist文件。</p><p>在<code>/DB_Lab3/urls.py</code>下进行如下设置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">&#x27;admin/&#x27;</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">&#x27;api/&#x27;</span>, include(<span class="string">&#x27;api.urls&#x27;</span>)),</span><br><span class="line">    url(<span class="string">r&#x27;^$&#x27;</span>, TemplateView.as_view(template_name=<span class="string">&quot;index.html&quot;</span>))</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>在<code>/DB_Lab3/settings.py</code>下进行如下设置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        ...,</span><br><span class="line">        <span class="string">&#x27;DIRS&#x27;</span>: [<span class="string">&#x27;appfront/dist&#x27;</span>],</span><br><span class="line">        ...</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">STATICFILES_DIRS = [</span><br><span class="line">    <span class="comment"># BASE_DIR / &quot;static&quot;,</span></span><br><span class="line">    os.path.join(BASE_DIR, <span class="string">&quot;appfront/dist/static&quot;</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>随后在项目根目录执行<code>python manage.py runserver</code>即可。</p><h2 id="遇到的坑">遇到的坑</h2><p>在使用<code>element-ui</code>时，遇到<code>el-table</code>表格不显示的问题，卡了两个小时才找到原因...</p><p>原因：版本问题！！！</p><p>解决办法：重新装一个低版本的包！！！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall element-ui</span><br><span class="line">npm install element-ui@2.9.2 -S</span><br></pre></td></tr></table></figure><h2 id="参考">参考</h2><blockquote><p><ahref="https://super-buaa-2021.github.io/Vuebook/">https://super-buaa-2021.github.io/Vuebook/</a></p><p><ahref="https://cloud.tencent.com/developer/article/1005607">https://cloud.tencent.com/developer/article/1005607</a></p><p><ahref="http://t.zoukankan.com/smile-fanyin-p-11258300.html">http://t.zoukankan.com/smile-fanyin-p-11258300.html</a></p><p><ahref="https://blog.csdn.net/weixin_48282959/article/details/124126667">https://blog.csdn.net/weixin_48282959/article/details/124126667</a></p><p><ahref="https://blog.csdn.net/m0_59023970/article/details/123427008">https://blog.csdn.net/m0_59023970/article/details/123427008</a></p><p><ahref="https://blog.csdn.net/yehaocheng520/article/details/117025938">https://blog.csdn.net/yehaocheng520/article/details/117025938</a></p><p><ahref="https://blog.csdn.net/qq_41216743/article/details/104605524">https://blog.csdn.net/qq_41216743/article/details/104605524</a></p></blockquote>]]></content:encoded>
      
      
      <category domain="http://yunsaijc.top/categories/%E9%A1%B9%E7%9B%AE%E8%AE%B0%E5%BD%95/">项目记录</category>
      
      
      <category domain="http://yunsaijc.top/tags/Python/">Python</category>
      
      <category domain="http://yunsaijc.top/tags/Web/">Web</category>
      
      
      <comments>http://yunsaijc.top/2022/12/09/2-Django+Vue/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
